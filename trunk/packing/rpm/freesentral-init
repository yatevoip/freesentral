#!/bin/sh
#
# freesentral-init:	Initializes the system for FreeSentral service
#
# chkconfig: 345 80 10
# description: Initializes a system used as FreeSentral service
#

# Source function library.
. /etc/rc.d/init.d/functions

RETVAL=0

init_once() {
    RETVAL=0
    ## Allow for restarting in case of kernel panic
    f="/etc/sysctl.conf"
    until fgrep -q 'kernel.panic' "$f"; do
	echo 'kernel.panic = 5' >> "$f"
	echo '5' > /proc/sys/kernel/panic
	RETVAL=1
    done
    ## Add the apache helper to allowed sudoers
    f="/etc/sudoers"
    until fgrep -q 'freesentral/ctl-root' "$f"; do
	echo -e '## Added for FreeSentral\nDefaults !requiretty\napache env_reset,!syslog,ALL=NOPASSWD: /usr/libexec/freesentral/ctl-root' >> "$f"
	RETVAL=1
    done
    ## Activate the auto vacuum in PostgreSQL
    f="/var/lib/pgsql/data/postgresql.conf"
    until fgrep -q 'FreeSentral' "$f"; do
	cat <<EOF >> "$f"

# generated by FreeSentral - please do not delete this line
stats_start_collector = on
stats_row_level = on
autovacuum = on
autovacuum_naptime = 300
EOF
	RETVAL=1
    done
    ## Allow Apache to write to the wanpipe config directory
    f="/etc/wanpipe"
    if [ -d "$f" ]; then
	if [ X`stat -c '%U' "$f" 2> /dev/null` != "Xapache" ]; then
	    chown -R apache.root "$f"
	    RETVAL=1
	fi
    else
	RETVAL=2
    fi
}

init() {
    echo -n $"Initializing FreeSentral: "
    init_once
    case "X$RETVAL" in
	X0)
	    success
	    ;;
	X1)
	    passed
	    ;;
	*)
	    failure
	    RETVAL=1
	    ;;
    esac
    echo
}

# See how we were called.
case "$1" in
    init)
	init
	;;
    start)
	init
	chkconfig freesentral-init off
	;;
    stop)
	;;
    *)
	echo $"Usage: $0 {init|start}"
	;;
esac
exit $RETVAL
